services:
  postgres:
    image: postgres:16
    container_name: movies-engine-postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: moviesdb
      POSTGRES_REPLICATION: logical
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    command: >
      postgres
      -c wal_level=logical
      -c max_wal_senders=4
      -c max_replication_slots=4
    networks:
      - movies-network
  pgadmin:
    image: dpage/pgadmin4:8
    container_name: movies-engine-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - movies-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: movies-engine-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - movies-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: movies-engine-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - movies-network

  kafka-connect:
    image: debezium/connect:2.4
    container_name: movies-engine-kafka-connect
    depends_on:
      - kafka
      - postgres
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      CONFIG_STORAGE_REPLICATION_FACTOR: 1
      OFFSET_FLUSH_INTERVAL_MS: 10000
      OFFSET_STORAGE_TOPIC: connect_offsets
      OFFSET_STORAGE_REPLICATION_FACTOR: 1
      STATUS_STORAGE_TOPIC: connect_statuses
      STATUS_STORAGE_REPLICATION_FACTOR: 1
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
    volumes:
      - ./debezium-config:/kafka/config
    networks:
      - movies-network

  opensearch:
    image: opensearchproject/opensearch:2.11.1
    container_name: movies-engine-opensearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - plugins.security.disabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    networks:
      - movies-network

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.11.1
    container_name: movies-engine-opensearch-dashboards
    ports:
      - "5601:5601"
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]'
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: "true"
    depends_on:
      - opensearch
    networks:
      - movies-network

  redis:
    image: redis:7-alpine
    container_name: movies-engine-redis
    ports:
      - "6379:6379"
    networks:
      - movies-network

#  opensearch-sync:
#    build:
#      context: .
#      dockerfile: Dockerfile.sync
#    container_name: movies-engine-opensearch-sync
#    depends_on:
#      - kafka
#      - opensearch
#    environment:
#      KAFKA_BROKERS: kafka:9092
#      OPENSEARCH_URL: http://opensearch:9200
#      NODE_ENV: development
#    volumes:
#      - ./sync-service:/app
#    networks:
#      - movies-network

volumes:
  postgres_data:
  opensearch_data:

networks:
  movies-network:
    driver: bridge